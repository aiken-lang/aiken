---
source: crates/aiken-lang/src/parser.rs
description: "Code:\n\nfn foo() {\n  let x = \"â˜…\"\n  x\n}\n"
---
Module {
    name: "",
    docs: [],
    type_info: (),
    definitions: [
        Fn(
            Function {
                arguments: [],
                body: Sequence {
                    location: 13..30,
                    expressions: [
                        Assignment {
                            location: 13..26,
                            value: ByteArray {
                                location: 21..26,
                                bytes: [
                                    226,
                                    152,
                                    133,
                                ],
                                preferred_format: Utf8String,
                            },
                            patterns: [
                                (
                                    Var {
                                        location: 17..18,
                                        name: "x",
                                    },
                                    None,
                                ),
                            ],
                            kind: Let {
                                backpassing: false,
                            },
                        },
                        Var {
                            location: 29..30,
                            name: "x",
                        },
                    ],
                },
                doc: None,
                location: 0..8,
                name: "foo",
                public: false,
                return_annotation: None,
                return_type: (),
                end_position: 31,
                can_error: true,
            },
        ),
    ],
    lines: LineNumbers {
        line_starts: [
            0,
            11,
            27,
            31,
            33,
        ],
        length: 33,
        last: Some(
            33,
        ),
    },
    kind: Validator,
}
